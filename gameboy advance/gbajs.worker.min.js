/**
 * This file contains the worker script for the Gameboy Advance emulator.
 * It is responsible for handling the rendering and processing of the emulator.
 * 
 * You must download this file locally to use it, as you cannot use external workers.
 */
/*!
 * Gameboy Advance Emulator - Minified and compacted version
 * This project is based on GBAjs v2 by Andy Chase, available at https://github.com/andychase/gbajs2,
 * which is a rework of the original GBAjs by endrift, available at https://github.com/endrift/gbajs.
 *
 * The minification and enhancements were developed by Nolly (GitHub: TheNolle).
 * This software is provided under the MIT License, ensuring it remains free and open source while allowing
 * modifications and broader use, subject to the original terms.
 *
 * The MIT License (MIT)
 * Copyright (c) 2024 Nolly
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
 * PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
 * FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
importScripts('https://cdn.thenolle.com/gameboy-advance/gbajs.software.min.js');var video=new GameBoyAdvanceSoftwareRenderer,proxyBacking=null,currentFrame=0;function receiveDirty(e){for(var r in e)switch(r){case"DISPCNT":video.writeDisplayControl(e[r]);break;case"BGCNT":for(var a in e[r])"number"==typeof e[r][a]&&video.writeBackgroundControl(a,e[r][a]);break;case"BGHOFS":for(var a in e[r])"number"==typeof e[r][a]&&video.writeBackgroundHOffset(a,e[r][a]);break;case"BGVOFS":for(var a in e[r])"number"==typeof e[r][a]&&video.writeBackgroundVOffset(a,e[r][a]);break;case"BGX":for(var a in e[r])"number"==typeof e[r][a]&&video.writeBackgroundRefX(a,e[r][a]);break;case"BGY":for(var a in e[r])"number"==typeof e[r][a]&&video.writeBackgroundRefY(a,e[r][a]);break;case"BGPA":for(var a in e[r])"number"==typeof e[r][a]&&video.writeBackgroundParamA(a,e[r][a]);break;case"BGPB":for(var a in e[r])"number"==typeof e[r][a]&&video.writeBackgroundParamB(a,e[r][a]);break;case"BGPC":for(var a in e[r])"number"==typeof e[r][a]&&video.writeBackgroundParamC(a,e[r][a]);break;case"BGPD":for(var a in e[r])"number"==typeof e[r][a]&&video.writeBackgroundParamD(a,e[r][a]);break;case"WIN0H":video.writeWin0H(e[r]);break;case"WIN1H":video.writeWin1H(e[r]);break;case"WIN0V":video.writeWin0V(e[r]);break;case"WIN1V":video.writeWin1V(e[r]);break;case"WININ":video.writeWinIn(e[r]);break;case"WINOUT":video.writeWinOut(e[r]);break;case"BLDCNT":video.writeBlendControl(e[r]);break;case"BLDALPHA":video.writeBlendAlpha(e[r]);break;case"BLDY":video.writeBlendY(e[r]);break;case"MOSAIC":video.writeMosaic(e[r]);break;case"memory":receiveMemory(e.memory)}}function receiveMemory(e){if(e.palette&&video.palette.overwrite(new Uint16Array(e.palette)),e.oam&&video.oam.overwrite(new Uint16Array(e.oam)),e.vram)for(var r=0;r<12;++r)e.vram[r]&&video.vram.insert(r<<12,new Uint16Array(e.vram[r]))}self.finishDraw=function(e){self.postMessage({type:"finish",backing:e,frame:currentFrame})};var handlers={clear:function(e){video.clear(e)},scanline:function(e){receiveDirty(e.dirty),video.drawScanline(e.y,proxyBacking)},start:function(e){proxyBacking=e.backing,video.setBacking(e.backing)},finish:function(e){currentFrame=e.frame;for(var r=0,a=0;a<e.scanlines.length;++a){for(var i=r;i<e.scanlines[a].y;++i)video.drawScanline(i,proxyBacking);r=e.scanlines[a].y+1,receiveDirty(e.scanlines[a].dirty),video.drawScanline(e.scanlines[a].y,proxyBacking)}for(i=r;i<160;++i)video.drawScanline(i,proxyBacking);video.finishDraw(self)}};self.onmessage=function(e){handlers[e.data.type](e.data)};